Microsoft (R) Macro Assembler Version 6.15.8803		    10/28/18 23:02:49
interpolate_driver.asm					     Page 1 - 1


				.386
				.MODEL FLAT

				ExitProcess PROTO NEAR32 stdcall, dwExitCode:DWORD

				.STACK  4096

				INCLUDE debug.h
			      C INCLUDE io.h
			      C ; IO.H -- header file for I/O macros
			      C ; 32-bit version for flat memory model
			      C ; R. Detmer   last revised 8/2000
			      C .NOLIST     ; turn off listing
			      C .LIST        ; begin listing
			      C 
			      C 
 = 0000000D		      C CR          EQU    0Dh   ; carriage return character
 = 0000000A		      C LF          EQU    0Ah   ; linefeed character
			      C 
 00000000		      C .DATA
 00000000 0D 0A 00	      C carriage    BYTE     CR, LF, 0
 00000003  0000000D [	      C text        BYTE     13 DUP(?)
	    00
	   ]
			      C 
			      C outputW    	MACRO   var
			      C                    itoa text, var
			      C                    output text
			      C                    output carriage
			      C                 ENDM
			      C 
			      C outputD  	MACRO  var
			      C                    dtoa text, var
			      C                    output text
			      C                    output carriage
			      C          	ENDM
			      C 
			      C inputW          MACRO  prompt, location
			      C                    output prompt
			      C                    input text, 8
			      C                    atoi text
			      C                    mov location, ax
			      C                 ENDM
			      C 
			      C inputD          MACRO  prompt, location
			      C                    output prompt
			      C                    input text, 13
			      C                    atod text
			      C                    mov location, eax
			      C                 ENDM
			      C 
				INCLUDE io.h
			      C ; IO.H -- header file for I/O macros
			      C ; 32-bit version for flat memory model
			      C ; R. Detmer   last revised 8/2000
			      C .NOLIST     ; turn off listing
			      C .LIST        ; begin listing
			      C 
				INCLUDE sqrt.h
			      C .NOLIST     ; turn off listing
			      C .LIST       
			      C 
				INCLUDE interpolate.h
			      C .NOLIST
			      C .LIST       
			      C 
				INCLUDE float.h
			      C .NOLIST
			      C .LIST
			      C 
				INCLUDE sort_points.h
			      C .NOLIST
			      C .LIST
			      C 
 00000010			.DATA

 00000010  00000014 [		array REAL4 20 DUP (?)
	    00000000
	   ]
 00000060 38D1B717		tol REAL4 0.0001
 00000064 00000000		xcoor REAL4 ?
 00000068 00000000		degree REAL4 ?

 0000006C 0000			array_size WORD ?



 0000006E 45 6E 74 65 72	p1 BYTE "Enter the x-coordinate of the desired interpolated y.", Lf, 0
	   20 74 68 65 20
	   78 2D 63 6F 6F
	   72 64 69 6E 61
	   74 65 20 6F 66
	   20 74 68 65 20
	   64 65 73 69 72
	   65 64 20 69 6E
	   74 65 72 70 6F
	   6C 61 74 65 64
	   20 79 2E 0A 00
 000000A5 45 6E 74 65 72	p2 BYTE "Enter the degree of the interpolating polynomial.", Lf, 0
	   20 74 68 65 20
	   64 65 67 72 65
	   65 20 6F 66 20
	   74 68 65 20 69
	   6E 74 65 72 70
	   6F 6C 61 74 69
	   6E 67 20 70 6F
	   6C 79 6E 6F 6D
	   69 61 6C 2E 0A
	   00
 000000D8 59 6F 75 20 6D	p3 BYTE "You may enter up to 20 points, one at a time.", Lf, 0
	   61 79 20 65 6E
	   74 65 72 20 75
	   70 20 74 6F 20
	   32 30 20 70 6F
	   69 6E 74 73 2C
	   20 6F 6E 65 20
	   61 74 20 61 20
	   74 69 6D 65 2E
	   0A 00
 00000107 65 6E 74 65 72	p4 BYTE "enter 'q' to quit", Lf, 0
	   20 27 71 27 20
	   74 6F 20 71 75
	   69 74 0A 00


				;outputw_nocarriage    	MACRO   var
				 ;                   itoa text, var
				  ;                  output text
				   ;             ENDM

				;inputw_noprompt         MACRO  location
				 ;                   input text, 8
				  ;                  atoi text
				   ;                 mov location, ax
				    ;            ENDM

				display_float_array MACRO to_display, sz
				                    local display, done
				                    output carriage
				                    
				                    xor ecx, ecx
				                    lea ebx, to_display
				                    outputw sz
				                    display:
				                        cmp cx, sz
				                        je done
				                 
				                        mov ax, 3
				                        mov dx, 6
				                        ftoa [ebx], ax, dx, text 
				                        
				                        output text
				                        output carriage
				                        add ebx, 4
				                        inc cx

				                        jmp display
				                    done:

				                ENDM

 00000000			.CODE
 00000000			_start:
 00000000
				output p1
				input text, 8
				output text
				output carriage
				atof text,  xcoor

				output p2
				input text, 8
				output text
				output carriage
				atof text,  degree


				output p3
				output p4

 000000C0  8D 1D 00000010 R	lea ebx, array
 000000C6  33 C9		xor ecx, ecx
 000000C8			fill_array:
				    input text, 8
				    output text
				    output carriage
 000000F8  80 3D 00000003 R	    cmp [text], 'q'
	   71
 000000FF  74 17		    je fin

				    atof text, DWORD PTR [ebx]
 00000111  83 C3 04		    add ebx, 4
 00000114  66| 41		    inc cx
 00000116  EB B0		    jmp fill_array

 00000118			fin:
				output carriage

 00000126  66| 8B C1		mov ax, cx
 00000129  66| 99		cwd
 0000012B  66| BB 0002		mov bx, 2
 0000012F  66| F7 FB		idiv bx

 00000132  66| A3		mov array_size, ax
	   0000006C R

				sort_points array, xcoor, tol, array_size
				print_points array, array_size

 0000016E  8D 1D 00000010 R	lea ebx, array
 00000174  66| 83 2D		sub array_size, 1
	   0000006C R 01
 0000017C  66| B8 0003		mov ax, 3
 00000180  66| BA 0006		mov dx, 6
				output carriage
				ftoa [ebx+array_size], ax, dx, text 
				output carriage
				output text
				interpolate_call array, array_size, degree

				;non-header call: 
				;push var
				;call proc

 000001DD			PUBLIC _start
				END
Microsoft (R) Macro Assembler Version 6.15.8803		    10/28/18 23:02:49
interpolate_driver.asm					     Symbols 2 - 1




Macros:

                N a m e                 Type

atod . . . . . . . . . . . . . .	Proc
atof . . . . . . . . . . . . . .	Proc
atoi . . . . . . . . . . . . . .	Proc
display_float_array  . . . . . .	Proc
dtoa . . . . . . . . . . . . . .	Proc
ftoa . . . . . . . . . . . . . .	Proc
inputD . . . . . . . . . . . . .	Proc
inputW . . . . . . . . . . . . .	Proc
input  . . . . . . . . . . . . .	Proc
interpolate_call . . . . . . . .	Proc
itoa . . . . . . . . . . . . . .	Proc
outputD  . . . . . . . . . . . .	Proc
outputW  . . . . . . . . . . . .	Proc
output . . . . . . . . . . . . .	Proc
print_points . . . . . . . . . .	Proc
sort_points  . . . . . . . . . .	Proc
sqrt . . . . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000011A DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000001DD DWord	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

$$$00001 . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000001DD Private
  fill_array . . . . . . . . . .	L Near	 000000C8 _TEXT	
  fin  . . . . . . . . . . . . .	L Near	 00000118 _TEXT	
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
CR . . . . . . . . . . . . . . .	Number	 0000000Dh   
LF . . . . . . . . . . . . . . .	Number	 0000000Ah   
_start . . . . . . . . . . . . .	L Near	 00000000 _TEXT	Public
array_size . . . . . . . . . . .	Word	 0000006C _DATA	
array  . . . . . . . . . . . . .	DWord	 00000010 _DATA	
atodproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
atof_proc  . . . . . . . . . . .	L Near	 00000000 FLAT	External
atoiproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
carriage . . . . . . . . . . . .	Byte	 00000000 _DATA	
degree . . . . . . . . . . . . .	DWord	 00000068 _DATA	
dtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
fill_array . . . . . . . . . . .	L Near	 000000C8 _TEXT	
fin  . . . . . . . . . . . . . .	L Near	 00000118 _TEXT	
ftoa_proc  . . . . . . . . . . .	L Near	 00000000 FLAT	External
inproc . . . . . . . . . . . . .	L Near	 00000000 FLAT	External
interpolate  . . . . . . . . . .	L Near	 00000000 FLAT	External
itoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
outproc  . . . . . . . . . . . .	L Near	 00000000 FLAT	External
p1 . . . . . . . . . . . . . . .	Byte	 0000006E _DATA	
p2 . . . . . . . . . . . . . . .	Byte	 000000A5 _DATA	
p3 . . . . . . . . . . . . . . .	Byte	 000000D8 _DATA	
p4 . . . . . . . . . . . . . . .	Byte	 00000107 _DATA	
print_points_proc  . . . . . . .	L Near	 00000000 FLAT	External
sort_points_proc . . . . . . . .	L Near	 00000000 FLAT	External
sqrt_proc  . . . . . . . . . . .	L Near	 00000000 FLAT	External
text . . . . . . . . . . . . . .	Byte	 00000003 _DATA	
tol  . . . . . . . . . . . . . .	DWord	 00000060 _DATA	
xcoor  . . . . . . . . . . . . .	DWord	 00000064 _DATA	

	   0 Warnings
	   0 Errors
