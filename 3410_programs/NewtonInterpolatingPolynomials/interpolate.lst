Microsoft (R) Macro Assembler Version 6.15.8803		    10/31/18 10:50:13
interpolate.asm						     Page 1 - 1


				.386
				.MODEL FLAT


				PUBLIC	interpolate ; make procedure names visible outside the file containing them

				INCLUDE compute_b.h
			      C .NOLIST     ; turn off listing
			      C .LIST       
			      C 

				; array_name, array_size, xcord, toler, degree
 = [EBP+22]			array_addr EQU [EBP+22]
 = [EBP+20]			array_size EQU [EBP+20]
 = [EBP+16]			xcoor EQU [EBP+16]
 = [EBP+12]			tol EQU [EBP+12]
 = [EBP+8]			degree EQU [EBP+8]
 = [EBP-4]			total EQU [EBP-4]
 = [EBP-8]			tmp_float EQU [EBP-8]

				retr7t89 MACRO index 
				        xor eax, eax
				        mov ebx, index
				        mov eax, 8
				        imul ebx
				        mov edi, eax
				        mov ebx, array_addr
				        ENDM
				        
				retrieve_x MACRO index ;store in eax
				        retr7t89 index
				        mov eax, [ebx+edi] 
				        ENDM

				retrieve_y MACRO index 
				        retr7t89 index
				        mov eax, [ebx+edi+4] 
				        ENDM

 00000000			.CODE

 00000000			interpolate 	PROC 	Near32

 00000000			setup:

 00000000  55			    push	ebp
 00000001  8B EC			mov	ebp, esp	 ; establish stack frame (ebp contains a memory address)
				                        
 00000003  6A 00		    pushd   0                ; add space on the stack for local variables
 00000005  6A 00		    pushd   0                ; add space on the stack for local variables

 00000007  51			    push    ecx      ; save the registers used below (can't save them all as ax contains the index of the match)
 00000008  52			    push    edx
 00000009  9C				pushfd 			 ; save all flags (pushf needed, d for outputw)
				                       
 0000000A  33 C9		    xor     ecx, ecx

 0000000C			main_code:

 0000000C  33 C9		    xor ecx, ecx ; zero counter and set to degree
 0000000E  89 4D FC		    mov total, ecx ; zero total
 00000011  D9 45 08		    fld REAL4 PTR degree
 00000014  DB 5D 08		    fistp DWORD PTR degree ;converted into int value to use as counter value
 00000017  66| 8B 4D 08		    mov cx, degree

 0000001B  D9 45 FC		    fld REAL4 PTR total
				    
 0000001E			    interpolate_loop:
 0000001E  66| 83 F9 00		        cmp cx, 0
 00000022  74 37		        je loop_done
				        
				        compute_b_call array_addr, ecx, 0
 00000024  FF 75 16	     1	                   push array_addr
 00000027  51		     1	                   push ecx 
 00000028  6A 00	     1	                   push 0 
 0000002A  E8 00000000 E     1	                   call compute_b
 0000002F  89 45 F8		        mov tmp_float, eax
 00000032  D9 45 F8		        fld REAL4 PTR tmp_float
				        
				        
 00000035  DE C1		        fadd ;add bn to total

 00000037  D9 45 10		        fld REAL4 PTR xcoor 

 0000003A  66| 49		        dec cx
				        retrieve_x ecx
 0000003C  33 C0	     2	        xor eax, eax
 0000003E  8B D9	     2	        mov ebx, ecx
 00000040  B8 00000008	     2	        mov eax, 8
 00000045  F7 EB	     2	        imul ebx
 00000047  8B F8	     2	        mov edi, eax
 00000049  8B 5D 16	     2	        mov ebx, array_addr
 0000004C  8B 04 1F	     1	        mov eax, [ebx+edi] 
 0000004F  89 45 F8		        mov tmp_float, eax
 00000052  D9 45 F8		        fld REAL4 PTR tmp_float

 00000055  DE E9		        fsub ;(x-x(n-1))
 00000057  DE C9		        fmul ;total * (x-x(n-1))

 00000059  EB C3		        jmp interpolate_loop

 0000005B			    loop_done:
				        retrieve_y 0
 0000005B  33 C0	     2	        xor eax, eax
 0000005D  BB 00000000	     2	        mov ebx, 0
 00000062  B8 00000008	     2	        mov eax, 8
 00000067  F7 EB	     2	        imul ebx
 00000069  8B F8	     2	        mov edi, eax
 0000006B  8B 5D 16	     2	        mov ebx, array_addr
 0000006E  8B 44 1F 04	     1	        mov eax, [ebx+edi+4] 
 00000072  89 45 F8		        mov tmp_float, eax
 00000075  D9 45 F8		        fld REAL4 PTR tmp_float
 00000078  DE C1		        fadd 

 0000007A  D9 5D F8		        fstp REAL4 PTR tmp_float
 0000007D  8B 45 F8		        mov eax, tmp_float

 00000080			finish:

				    ; of course, pop the items in the reverse order from push
 00000080  9D				popfd			    ; restore flags and registers
 00000081  5A			    pop	    edx
 00000082  59			    pop     ecx
 00000083  5B				pop	    ebx

 00000084  8B E5		    mov     esp,ebp		; discard local variables

 00000086  5D				pop	ebp
 00000087  C2 000E			ret	14		        ; return, discarding parameter

 0000008A			interpolate	ENDP

				END
Microsoft (R) Macro Assembler Version 6.15.8803		    10/31/18 10:50:13
interpolate.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

compute_b_call . . . . . . . . .	Proc
retr7t89 . . . . . . . . . . . .	Proc
retrieve_x . . . . . . . . . . .	Proc
retrieve_y . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	32 Bit	 00000000 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000008A DWord	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

interpolate  . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000008A Public
  setup  . . . . . . . . . . . .	L Near	 00000000 _TEXT	
  main_code  . . . . . . . . . .	L Near	 0000000C _TEXT	
  interpolate_loop . . . . . . .	L Near	 0000001E _TEXT	
  loop_done  . . . . . . . . . .	L Near	 0000005B _TEXT	
  finish . . . . . . . . . . . .	L Near	 00000080 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
array_addr . . . . . . . . . . .	Text   	 [EBP+22]
array_size . . . . . . . . . . .	Text   	 [EBP+20]
compute_b  . . . . . . . . . . .	L Near	 00000000 FLAT	External
degree . . . . . . . . . . . . .	Text   	 [EBP+8]
tmp_float  . . . . . . . . . . .	Text   	 [EBP-8]
tol  . . . . . . . . . . . . . .	Text   	 [EBP+12]
total  . . . . . . . . . . . . .	Text   	 [EBP-4]
xcoor  . . . . . . . . . . . . .	Text   	 [EBP+16]

	   0 Warnings
	   0 Errors
